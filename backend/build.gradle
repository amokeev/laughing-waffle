plugins {
    id 'com.palantir.docker' version '0.10.0'
    id 'com.palantir.docker-run' version '0.10.0'
}

apply plugin: 'java'
apply plugin: 'java-library-distribution'

group 'filter-backend'
version '1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    integTestCompile.extendsFrom testCompile
    integTestRuntime.extendsFrom testRuntime
}

sourceSets {
    integTest {
        java.srcDir file('src/integTest/java')
        resources.srcDir file('src/integTest/resources')
    }
}

task integTest(type: Test) {
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
}

dependencies {
    // https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-server
    compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.26'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: '2.26'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-jetty-http', version: '2.26'
    compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.26'

    // compile group: 'org.glassfish.jersey.media', name: 'jersey-media-moxy', version: '2.7'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-moxy', version: '2.26'

    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.2'

    //For command line starter
    compile group: 'org.eclipse.jetty.aggregate', name: 'jetty-all', version: '9.4.9.v20180320'

    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'

    //Test dependencies

    testCompile group: 'junit', name: 'junit', version: '4.12'

    //Integration Test dependencies
    integTestCompile sourceSets.main.output
    integTestCompile configurations.testCompile
    integTestCompile sourceSets.test.output
    integTestRuntime configurations.testRuntime

    //integTestCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'
    integTestCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.1.0'
}

docker {
    name "filter-backend:1.0"
    files tasks.distTar.outputs
}

dockerRun {
    name 'filter-container'
    image 'filter-backend:1.0'
    ports '8080:8080'
}

distZip.shouldRunAfter(build)


jar {
    manifest {
        attributes("Implementation-Title": project.name,
                "Implementation-Version": version,
                "Main-Class": "cmd.Main",
        "Class-Path": configurations.compile.collect { "lib/$it.name" }.join(' '))
    }
}